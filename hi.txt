import React, { useState, useEffect } from "react";
import axios from "axios";
import GraphWithProvider from "./components/HierarchicalGraph";

const controlsStyles = {
  marginBottom: "20px",
};

const controlsLabelStyles = {
  marginRight: "10px",
};

const controlsInputStyles = {
  marginRight: "10px",
};

const controlsSpanStyles = {
  fontWeight: "bold",
};

const graphContainerStyles = {
  height: "calc(100vh - 50px)", // Adjust the height based on your controls' height
  overflow: "hidden",
};

const App: React.FC = () => {
  const [sliderValue, setSliderValue] = useState<number>(0);
  const [data, setData] = useState<any[]>([]); // Adjust the type as per your data structure

  useEffect(() => {
    // Axios GET request to fetch data
    axios.get("http://localhost:8100/api/data")
      .then(response => {
        // Extract and flatten the arrays from the JSON structure
        const dataArray = Object.values(response.data).flat(); // Adjust based on your actual API response structure
        
        // Optionally, parse or process data fields
        const processedData = dataArray.map((item: any) => ({
          ...item,
          graph_depth: parseInt(item.graph_depth, 10), // Convert graph_depth to number if needed
        }));

        setData(processedData);
      })
      .catch(error => {
        console.error("Error fetching data:", error);
      });
  }, []); // Empty dependency array ensures this effect runs only once on mount

  return (
    <div style={{ height: "100vh", overflow: "hidden" }}>
      <div style={controlsStyles}>
        <label style={controlsLabelStyles}>
          Slider Value:
          <input
            type="range"
            min="0"
            max="100"
            value={sliderValue}
            onChange={(e) => setSliderValue(parseInt(e.target.value, 10))}
            style={controlsInputStyles}
          />
          <span style={controlsSpanStyles}>{sliderValue}</span>
        </label>
      </div>
      <div style={graphContainerStyles}>
        <GraphWithProvider data={data} sliderValue={sliderValue} />
      </div>
    </div>
  );
};

export default App;
