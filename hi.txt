import React, { useState, useCallback } from 'react';
import ReactFlow, { MiniMap, Controls, Background, addEdge } from 'react-flow';
import Papa from 'papaparse';

const initialNodes = [
  {
    id: 'root',
    type: 'default',
    data: { label: 'Root', value: 'Root Node', graphdepth: 0, parentNode: null },
    position: { x: 0, y: 0 },
    draggable: true,
    collapsed: false,
  },
];

const initialEdges = [];

const App = () => {
  const [nodes, setNodes] = useState(initialNodes);
  const [edges, setEdges] = useState(initialEdges);

  const handleFileUpload = useCallback((event) => {
    const file = event.target.files[0];
    if (file) {
      Papa.parse(file, {
        header: true,
        complete: (results) => {
          const data = results.data;
          const processedNodes = data.map((item) => ({
            id: item.node,
            type: item.type || 'default',
            data: {
              label: item.node,
              value: item.value,
              graphdepth: parseInt(item.graphDepth),
              parentNode: item.parentNode,
            },
            position: { x: 0, y: 0 },
            draggable: true,
            collapsed: true, // Initially collapsed
          }));

          setNodes(processedNodes);

          // Optionally, set edges if you want to show connections
          const processedEdges = generateEdges(processedNodes);
          setEdges(processedEdges);
        },
      });
    }
  }, []);

  const generateEdges = (nodes) => {
    const edges = [];
    nodes.forEach((node) => {
      if (node.data.parentNode) {
        edges.push({
          id: `e-${node.data.parentNode}-${node.id}`,
          source: node.data.parentNode,
          target: node.id,
        });
      }
    });
    return edges;
  };

  const handleNodeClick = (nodeId) => {
    const updatedNodes = nodes.map((node) =>
      node.id === nodeId ? { ...node, collapsed: !node.collapsed } : node
    );
    setNodes(updatedNodes);
  };

  return (
    <div style={{ width: '100vw', height: '100vh' }}>
      <input type="file" accept=".csv" onChange={handleFileUpload} />
      <ReactFlow elements={nodes.concat(edges)} onLoad={() => console.log('Flow loaded')}>
        <Controls />
        <MiniMap />
        <Background variant="dots" gap={12} size={1} />
      </ReactFlow>
      <div style={{ position: 'absolute', top: 20, left: 20, zIndex: 999 }}>
        <h3>Nodes:</h3>
        <ul>
          {nodes.map((node) => (
            <li key={node.id}>
              {node.data.label}{' '}
              {node.collapsed && node.data.graphdepth > 0 && (
                <button onClick={() => handleNodeClick(node.id)}>Expand</button>
              )}
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
};

export default App;

