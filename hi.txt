describe('Node Expansion and Collapse', () => {
  it('should expand nodes on click', async () => {
    render(<WrappedApp />);

    await waitFor(() => {
      const nodeElements = screen.getAllByText('1');
      expect(nodeElements.length).toBeGreaterThan(0);
    });

    const nodeElement = document.querySelector('.react-flow__node');

    if (nodeElement) {
      fireEvent.click(nodeElement);
    }

    await waitFor(() => {
      const child1Elements = screen.getAllByText('2');
      const child2Elements = screen.getAllByText('3');
      expect(child1Elements.length).toBeGreaterThan(0);
      expect(child2Elements.length).toBeGreaterThan(0);
    });
  });

  it('should collapse nodes on second click', async () => {
    render(<WrappedApp />);

    await waitFor(() => {
      const nodeElements = screen.getAllByText('1');
      expect(nodeElements.length).toBeGreaterThan(0);
    });

    const nodeElement = document.querySelector('.react-flow__node');

    if (nodeElement) {
      fireEvent.click(nodeElement);
    }

    await waitFor(() => {
      const child1Elements = screen.getAllByText('2');
      const child2Elements = screen.getAllByText('3');
      expect(child1Elements.length).toBeGreaterThan(0);
      expect(child2Elements.length).toBeGreaterThan(0);
    });

    if (nodeElement) {
      fireEvent.click(nodeElement);
    }

    await waitFor(() => {
      expect(screen.queryByText('2')).not.toBeInTheDocument();
      expect(screen.queryByText('3')).not.toBeInTheDocument();
