Here's an example of how to use the `dagre.layout()` function with only dagre-d3 in TypeScript:
```
import * as d3 from 'dagre-d3';

const graph = new d3.Digraph();
// Add nodes and edges to the graph...

const layout = d3.layout()
  .graph(graph)
  .nodes(graph.nodes())
  .edges(graph.edges())
  .rankDir('TB') // or 'LR' for left-to-right
  .nodeSep(30)
  .edgeSep(30)
  .rankSep(30)
  .run();
```
In this example, we import dagre-d3 as `d3` and create a new graph using `d3.Digraph()`. We then add nodes and edges to the graph using the `graph.addNode()` and `graph.addEdge()` methods.

Next, we create a new layout object using `d3.layout()` and configure it to use the graph, nodes, and edges. We also set the rank direction, node separation, edge separation, and rank separation.

Finally, we call the `run()` method to perform the layout.

Note that the `run()` method returns the laid-out graph, so you can access the node positions and other layout information from the `graph` object.